/*
Created: 10/14/2014
Modified: 10/19/2014
Model: Oracle 11g Release 2
Database: Oracle 11g Release 2
*/


-- Create tables section -------------------------------------------------

-- Table ACTIVITY_TYPE

CREATE TABLE "ACTIVITY_TYPE"(
  "ACTIVITY_TYPE_ID" Number(5,0) NOT NULL,
  "ACTIVITY_TYPE_DESCRIPTION" Varchar2(255 ) NOT NULL
)
/

-- Add keys for table ACTIVITY_TYPE

ALTER TABLE "ACTIVITY_TYPE" ADD CONSTRAINT "PK_ACTIVITY_TYPE_ID" PRIMARY KEY ("ACTIVITY_TYPE_ID")
/

-- Table ACTIVITY

CREATE TABLE "ACTIVITY"(
  "ACTIVITY_ID" Number(20,0) NOT NULL,
  "CASE_ID" Number(20,0) NOT NULL,
  "ACTIVITY_TYPE_ID" Number(5,0) NOT NULL,
  "ACTIVITY_COMPLETED_DATE" Date NOT NULL,
  "ACTIVITY_ORDER" Number(5,0) NOT NULL
)
/


-- Add keys for table ACTIVITY

ALTER TABLE "ACTIVITY" ADD CONSTRAINT "PK_ACTIVITY_ID" PRIMARY KEY ("ACTIVITY_ID")
/

-- Create Sequence for ACTIVITY table
/* Removed at the request of ETL team - CJ. 11/3/2014
CREATE SEQUENCE CCRBSL_MASTER.ACTIVITY_SEQ
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER;

-- Create Triggers for ACTIVITY table
CREATE OR REPLACE TRIGGER CCRBSL_MASTER.ACTIVITY_TRG
  BEFORE INSERT
  ON CCRBSL_MASTER.ACTIVITY
  REFERENCING NEW AS New OLD AS Old
  FOR EACH ROW
BEGIN
-- For Toad:  Highlight column ACTIVITY_ID
  :new.ACTIVITY_ID := ACTIVITY_SEQ.nextval;
END ACTIVITY_TRG;
/
*/

-- Table CASE

CREATE TABLE "CASE"(
  "CASE_ID" Number(20,0) NOT NULL,
  "CASE_STATUS" Varchar2(15 ) NOT NULL,
  "CASE_PRECINCT" Varchar2(10 ),
  "CASE_BORO" Varchar2(30 ),
  "CASE_INCIDENT_DATE" Date,
  "CASE_RECIEVED_DATE" Date
)
/

-- Add keys for table CASE

ALTER TABLE "CASE" ADD CONSTRAINT "PK_CASE_ID" PRIMARY KEY ("CASE_ID")
/

-- Table ETL_STATUS

CREATE TABLE "ETL_STATUS"(
  "ETL_STATUS_ID" Number(20,0), 
  "ETL_STATUS_RUNNING" Number(1,0) DEFAULT 0 NOT NULL,
  "ETL_STATUS_LAST_COMPLETED_DATE" Date,
  "ETL_STATUS_PROC_WID" Number(20,0) NOT NULL
)
/
-- Add keys for table ETL_STATUS

ALTER TABLE "ETL_STATUS" ADD CONSTRAINT "PK_ETL_STATUS_ID" PRIMARY KEY ("ETL_STATUS_ID")
/
-- Add Unique key for table ETL_STATUS
ALTER TABLE "ETL_STATUS" ADD CONSTRAINT "UK_ETL_STATUS_PROC_WID" UNIQUE ("ETL_STATUS_PROC_WID")
/
-- Create Sequence for ETL_STATUS table

CREATE SEQUENCE CCRBSL_MASTER.ETL_STATUS_SEQ
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER;

-- Create Triggers for ETL_STATUS table
CREATE OR REPLACE TRIGGER CCRBSL_MASTER.ETL_STATUS_TRG
BEFORE INSERT
ON CCRBSL_MASTER.ETL_STATUS
REFERENCING NEW AS New OLD AS Old
FOR EACH ROW
BEGIN
-- For Toad:  Highlight column ETL_STATUS_ID
  :new.ETL_STATUS_ID := ETL_STATUS_SEQ.nextval;
END ETL_STATUS_TRG;
/

-- Create relationships section ------------------------------------------------- 

ALTER TABLE "ACTIVITY" ADD (CONSTRAINT "FK_ACT_TYPE_ID" FOREIGN KEY ("ACTIVITY_TYPE_ID") REFERENCES "ACTIVITY_TYPE" ("ACTIVITY_TYPE_ID"))
/

ALTER TABLE "ACTIVITY" ADD (CONSTRAINT "FK_CASE_ID" FOREIGN KEY ("CASE_ID") REFERENCES "CASE" ("CASE_ID"))
/

-- Grant readonly permissions to CCRB_READONLY

GRANT SELECT ON CASE TO CCRBSL_READONLY;
GRANT SELECT ON ACTIVITY TO CCRBSL_READONLY;
GRANT SELECT ON ACTIVITY_TYPE TO CCRBSL_READONLY;
GRANT SELECT ON ETL_STATUS TO CCRBSL_READONLY;

-- Grant insert, update, delete, select to CCRB_ETL
GRANT INSERT, UPDATE, DELETE, SELECT, INDEX ON CASE TO CCRBSL_ETL;
GRANT INSERT, UPDATE, DELETE, SELECT, INDEX ON ACTIVITY TO CCRBSL_ETL;
GRANT INSERT, UPDATE, DELETE, SELECT, INDEX ON ACTIVITY_TYPE TO CCRBSL_ETL;
GRANT INSERT, UPDATE, DELETE, SELECT, INDEX ON ETL_STATUS TO CCRBSL_ETL;

-- Create index on activity table for case ids
CREATE INDEX CCRBSL_MASTER.FK_CASE_ID ON CCRBSL_MASTER.ACTIVITY
(CASE_ID);

-- added 11/13/2014 for release 1.0.1
CREATE TABLE ETL_WORKFLOWHISTORY_S (
	completed_date VARCHAR2(16 BYTE), 
	complaint_id NUMBER(10,0), 
	activity_desc VARCHAR2(60 BYTE), 
	activity_id NUMBER(10,0), 
	stage_id NUMBER(10,0), 
	Stage_Desc VARCHAR2(40 BYTE), 
	ccrbreceived_date VARCHAR2(16 BYTE), 
	incident_date VARCHAR2(22 BYTE), 
	precinct VARCHAR2(40 BYTE), 
	boro VARCHAR2(40 BYTE), 
	casestatus VARCHAR2(6 BYTE), 
	ComplaintActivityOrder NUMBER(19,0)
);

GRANT INSERT, UPDATE, DELETE, SELECT, INDEX ON ETL_WORKFLOWHISTORY_S TO CCRBSL_ETL;